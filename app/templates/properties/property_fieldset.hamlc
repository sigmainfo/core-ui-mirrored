%h4.key= @property.key
- if @property.multivalue && !@property.nonDefined
  - title = I18n.t('property.value.add', {property_name: @property.key})
  %a.add-value{href: "javascript:void(0)", title: title}= title
- else if @property.nonDefined || (!@property.nonDefined && !@property.multivalue && !@property.required)
  - title = I18n.t('property.remove', {property_name: @property.key})
  %a.remove-property{href: "javascript:void(0)", title: title }= title

- switch @property.type
  - when 'boolean'
    .group
      - property = _.first @property.properties
      != @booleanField null, "#{@name}[value]", value: property?.value, required: false, errors: property?.errors?.value || {}, labels: @property?.labels, class: 'value'
  - when 'number'
    .group
      - property = _.first @property.properties
      != @textField null, "#{@name}[value]", value: property?.value, required: true, errors: property?.errors?.value || {}, class: 'value'
  - when 'date'
    .group
      - property = _.first @property.properties
      != @textField null, "#{@name}[value]", value: property?.value, required: true, errors: property?.errors?.value || {}, class: 'value'
  - when 'multiselect_picklist'
    .group
      - property = _.first @property.properties
      != @multiSelectField null, "#{@name}[value]", value: property?.value, required: false, errors: property?.errors?.value || {}, options: @property?.values, class: 'value'
  - when 'picklist'
    .group
      - property = _.first @property.properties
      - labeled_values = _.map @property?.values, (value) -> {value: value, label: value}
      != @selectField null, "#{@name}[value]", value: property?.value, required: false, errors: property?.errors?.value || {}, options: labeled_values, class: 'value'
  - when 'multiline_text'
    - for property, index in @property.properties
      != @render "properties/multiline_text_property_fieldset_value", propertyKey: @property.key, name: @name, property: property, index: index, selectableLanguages: @selectableLanguages, nonDefined: @property.nonDefined
  - when 'text'
    - for property, index in @property.properties
      != @render "properties/text_property_fieldset_value", propertyKey: @property.key, name: @name, property: property, index: index, selectableLanguages: @selectableLanguages, nonDefined: @property.nonDefined

