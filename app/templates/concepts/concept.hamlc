.concept-head
  - if @can 'manage'
    != @action_for 'concept.toggle_edit_mode', className: 'button'
    .edit
      != @action_for 'concept.delete_concept'
  .actions
    %a.concept-to-clipboard.remove{ href: "javascript: void(0)", title: I18n.t "concept.remove_from_clipboard" }= I18n.t "concept.remove_from_clipboard"
    %a.concept-to-clipboard.add{ href: "javascript: void(0)", title: I18n.t "concept.add_to_clipboard" }= I18n.t "concept.add_to_clipboard"
    %h4.system-info-toggle{title: I18n.t('concept.info.hint')}= I18n.t('concept.info.label')

  != @render "concepts/caption", label: @concept.get("label"), dragId: @concept.get("id")
  != @render "concepts/info", data: @concept.info()

- if @editing and @editProperties
  != @render "concepts/edit_properties", concept: @concept, editToggle: yes
- else if @editing or @concept.get("properties")?.length > 0
  - properties = ( key: key, properties: props for key, props of @concept.propertiesByKeyAndLang() )
  != @render "concepts/properties", properties: properties, editToggle: yes

- if @editing
  .terms
    - if @hasTermProperties
      %h4.properties-toggle{ title: I18n.t 'terms.properties.toggle-all.hint' }= I18n.t 'terms.properties.toggle-all.label'
    - if @can 'create', Coreon.Models.Term
      .add
        .edit
          %a.add-term{ href: 'javascript:void(0)' }= I18n.t 'term.new'
    - for tuple in @langs
      - [lang, terms] = tuple
      %section.language{class: lang}
        %h3= lang
        %ul
          - if terms.length > 0
            - for term in terms
              - if @editing and @editTerm is term.id
                != @render 'terms/new_term', term: term, reset: true
              - else
                != @render 'concepts/term', term: term
          - else
            .no-terms= I18n.t 'terms.empty'
